// generated 2006/11/15 3:19:31 CET by tobias@THINKPAD-T43.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/tobias/src/svn/gninjam/trunk/gninjam.glade
// for gtk 2.10.6 and gtkmm 2.10.3
//
// Please modify the corresponding derived classes in ./src/dialog_license.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "dialog_license_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/button.h>
#include <gtkmm/buttonbox.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/label.h>
#include <gtkmm/box.h>

dialog_license_glade::dialog_license_glade(
)
{  dialog_license = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Button *button_accept = Gtk::manage(new class Gtk::Button("Accept"));
   Gtk::Button *button_reject = Gtk::manage(new class Gtk::Button("Reject"));
   textview2 = Gtk::manage(new class Gtk::TextView());
   
   Gtk::ScrolledWindow *scrolledwindow4 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Label *label7 = Gtk::manage(new class Gtk::Label("You must agree to this license to connect to this server."));
   button_accept->set_name("button_accept");
   button_accept->set_flags(Gtk::CAN_FOCUS);
   button_accept->set_flags(Gtk::CAN_DEFAULT);
   button_accept->set_relief(Gtk::RELIEF_NORMAL);
   button_reject->set_name("button_reject");
   button_reject->set_flags(Gtk::CAN_FOCUS);
   button_reject->set_flags(Gtk::CAN_DEFAULT);
   button_reject->set_relief(Gtk::RELIEF_NORMAL);
   dialog_license->get_action_area()->set_name("dialog-action_area1");
   dialog_license->get_action_area()->property_layout_style().set_value(Gtk::BUTTONBOX_END);
   textview2->set_name("textview2");
   textview2->set_flags(Gtk::CAN_FOCUS);
   textview2->set_editable(false);
   textview2->set_cursor_visible(true);
   textview2->set_pixels_above_lines(0);
   textview2->set_pixels_below_lines(0);
   textview2->set_pixels_inside_wrap(0);
   textview2->set_left_margin(0);
   textview2->set_right_margin(0);
   textview2->set_indent(0);
   textview2->set_wrap_mode(Gtk::WRAP_NONE);
   textview2->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow4->set_name("scrolledwindow4");
   scrolledwindow4->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow4->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow4->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow4->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow4->add(*textview2);
   label7->set_name("label7");
   label7->set_alignment(0.5,0.5);
   label7->set_padding(0,0);
   label7->set_justify(Gtk::JUSTIFY_LEFT);
   label7->set_line_wrap(false);
   label7->set_use_markup(false);
   label7->set_selectable(false);
   dialog_license->get_vbox()->set_name("dialog-vbox1");
   dialog_license->get_vbox()->set_homogeneous(false);
   dialog_license->get_vbox()->set_spacing(0);
   dialog_license->get_vbox()->pack_start(*scrolledwindow4);
   dialog_license->get_vbox()->pack_start(*label7, Gtk::PACK_SHRINK, 0);
   dialog_license->set_name("dialog_license");
   dialog_license->set_title("License");
   dialog_license->set_modal(false);
   dialog_license->property_window_position().set_value(Gtk::WIN_POS_NONE);
   dialog_license->set_resizable(true);
   dialog_license->property_destroy_with_parent().set_value(false);
   dialog_license->set_has_separator(true);
   dialog_license->add_action_widget(*button_accept, -3);
   dialog_license->add_action_widget(*button_reject, -2);
   button_accept->show();
   button_reject->show();
   textview2->show();
   scrolledwindow4->show();
   label7->show();
}

dialog_license_glade::~dialog_license_glade()
{  delete gmm_data;
}
