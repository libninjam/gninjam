// generated 2006/11/14 21:10:50 CET by tobias@THINKPAD-T43.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /home/tobias/Projekte/gninjam/gninjam.glade
// for gtk 2.10.6 and gtkmm 2.10.2
//
// Please modify the corresponding derived classes in ./src/gNinjamClient.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "gNinjamClient_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/imagemenuitem.h>
#include <gtk/gtkimagemenuitem.h>
#include <gtkmm/menuitem.h>
#include <gtkmm/menu.h>
#include <gtkmm/menubar.h>
#include <gtkmm/label.h>
#include <gtkmm/adjustment.h>
#include <gtkmm/table.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/alignment.h>
#include <gtkmm/frame.h>
#include <gtkmm/paned.h>
#include <gtkmm/button.h>
#include <gtkmm/box.h>

gNinjamClient_glade::gNinjamClient_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  
   
   Gtk::Window *gNinjamClient = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::ImageMenuItem *verbinden1 = NULL;
   Gtk::ImageMenuItem *trennen1 = NULL;
   Gtk::MenuItem *separatormenuitem1 = NULL;
   Gtk::ImageMenuItem *beenden1 = NULL;
   Gtk::Menu *menuitem1_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem1 = NULL;
   Gtk::ImageMenuItem *ausschneiden1 = NULL;
   Gtk::ImageMenuItem *kopieren1 = NULL;
   Gtk::ImageMenuItem *einf__gen1 = NULL;
   Gtk::ImageMenuItem *l__schen1 = NULL;
   Gtk::Menu *menuitem2_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem2 = NULL;
   Gtk::MenuItem *menuitem3 = NULL;
   Gtk::MenuItem *info1 = NULL;
   Gtk::Menu *menuitem4_menu = Gtk::manage(new class Gtk::Menu());
   Gtk::MenuItem *menuitem4 = NULL;
   Gtk::MenuBar *menubar1 = Gtk::manage(new class Gtk::MenuBar());
   Gtk::Label *label8 = Gtk::manage(new class Gtk::Label("Master:"));
   Gtk::Label *label9 = Gtk::manage(new class Gtk::Label("Metronome:"));
   Gtk::Adjustment *hscale_metronome_volume_adj = Gtk::manage(new class Gtk::Adjustment(0, -120, 20, 0.5, 1, 0));
   hscale_metronome_volume = Gtk::manage(new class Gtk::HScale(*hscale_metronome_volume_adj));
   
   Gtk::Adjustment *hscale_master_pan_adj = Gtk::manage(new class Gtk::Adjustment(0, -1, 1, 0.00999999977648, 0.10000000149, 0));
   hscale_master_pan = Gtk::manage(new class Gtk::HScale(*hscale_master_pan_adj));
   
   Gtk::Adjustment *hscale_metronome_pan_adj = Gtk::manage(new class Gtk::Adjustment(0, -1, 1, 0, 0, 0));
   hscale_metronome_pan = Gtk::manage(new class Gtk::HScale(*hscale_metronome_pan_adj));
   checkbutton_master_mute = Gtk::manage(new class Gtk::CheckButton("mute"));
   checkbutton_metronome_mute = Gtk::manage(new class Gtk::CheckButton("mute"));
   entry1 = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Adjustment *hscale_master_volume_adj = Gtk::manage(new class Gtk::Adjustment(-3.79999995232, -120, 20, 0.5, 1, 0));
   hscale_master_volume = Gtk::manage(new class Gtk::HScale(*hscale_master_volume_adj));
   
   Gtk::Table *table2 = Gtk::manage(new class Gtk::Table(2, 2, false));
   treeview1 = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Alignment *alignment1 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label1 = Gtk::manage(new class Gtk::Label("<b>Local</b>"));
   Gtk::Frame *frame1 = Gtk::manage(new class Gtk::Frame());
   treeview2 = Gtk::manage(new class Gtk::TreeView());
   
   Gtk::ScrolledWindow *scrolledwindow2 = Gtk::manage(new class Gtk::ScrolledWindow());
   Gtk::Alignment *alignment2 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   Gtk::Label *label2 = Gtk::manage(new class Gtk::Label("<b>Remote</b>"));
   Gtk::Frame *frame2 = Gtk::manage(new class Gtk::Frame());
   Gtk::VPaned *vpaned2 = Gtk::manage(new class Gtk::VPaned());
   textview1 = Gtk::manage(new class Gtk::TextView());
   
   Gtk::ScrolledWindow *scrolledwindow3 = Gtk::manage(new class Gtk::ScrolledWindow());
   chat_entry = Gtk::manage(new class Gtk::Entry());
   
   Gtk::Button *button_send = Gtk::manage(new class Gtk::Button("Send"));
   Gtk::HBox *hbox2 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::VBox *vbox3 = Gtk::manage(new class Gtk::VBox(false, 0));
   Gtk::Alignment *alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 1, 1));
   label_chat = Gtk::manage(new class Gtk::Label("<b>Chat</b>"));
   
   Gtk::Frame *frame3 = Gtk::manage(new class Gtk::Frame());
   Gtk::HPaned *hpaned1 = Gtk::manage(new class Gtk::HPaned());
   progressbar1 = Gtk::manage(new class Gtk::ProgressBar());
   statusbar1 = Gtk::manage(new class Gtk::Statusbar());
   
   Gtk::HBox *hbox1 = Gtk::manage(new class Gtk::HBox(false, 0));
   Gtk::VBox *vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-connect")));
   verbinden1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-disconnect")));
   trennen1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&menuitem1_menu->items().back();
   
   menuitem1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   beenden1 = (Gtk::ImageMenuItem *)&menuitem1_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-cut")));
   ausschneiden1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-copy")));
   kopieren1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-paste")));
   einf__gen1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem2_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-delete")));
   l__schen1 = (Gtk::ImageMenuItem *)&menuitem2_menu->items().back();
   
   menuitem4_menu->items().push_back(Gtk::Menu_Helpers::MenuElem("_Info"));
   info1 = (Gtk::MenuItem *)&menuitem4_menu->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Datei", *menuitem1_menu));
   menuitem1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Bearbeiten", *menuitem2_menu));
   menuitem2 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Ansicht"));
   menuitem3 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem("_Hilfe", *menuitem4_menu));
   menuitem4 = (Gtk::MenuItem *)&menubar1->items().back();
   label8->set_alignment(0,0.5);
   label8->set_padding(0,0);
   label8->set_justify(Gtk::JUSTIFY_LEFT);
   label8->set_line_wrap(false);
   label8->set_use_markup(false);
   label8->set_selectable(false);
   label9->set_alignment(0,0.5);
   label9->set_padding(0,0);
   label9->set_justify(Gtk::JUSTIFY_LEFT);
   label9->set_line_wrap(false);
   label9->set_use_markup(false);
   label9->set_selectable(false);
   hscale_metronome_volume->set_flags(Gtk::CAN_FOCUS);
   hscale_metronome_volume->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   hscale_metronome_volume->set_inverted(false);
   hscale_metronome_volume->set_digits(1);
   hscale_metronome_volume->set_draw_value(true);
   hscale_metronome_volume->set_value_pos(Gtk::POS_RIGHT);
   hscale_master_pan->set_flags(Gtk::CAN_FOCUS);
   hscale_master_pan->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   hscale_master_pan->set_inverted(false);
   hscale_master_pan->set_digits(2);
   hscale_master_pan->set_draw_value(true);
   hscale_master_pan->set_value_pos(Gtk::POS_LEFT);
   hscale_metronome_pan->set_flags(Gtk::CAN_FOCUS);
   hscale_metronome_pan->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   hscale_metronome_pan->set_inverted(false);
   hscale_metronome_pan->set_digits(2);
   hscale_metronome_pan->set_draw_value(true);
   hscale_metronome_pan->set_value_pos(Gtk::POS_LEFT);
   checkbutton_master_mute->set_flags(Gtk::CAN_FOCUS);
   checkbutton_master_mute->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_master_mute->set_mode(true);
   checkbutton_master_mute->set_active(false);
   checkbutton_metronome_mute->set_flags(Gtk::CAN_FOCUS);
   checkbutton_metronome_mute->set_relief(Gtk::RELIEF_NORMAL);
   checkbutton_metronome_mute->set_mode(true);
   checkbutton_metronome_mute->set_active(false);
   entry1->set_flags(Gtk::CAN_FOCUS);
   entry1->set_visibility(true);
   entry1->set_editable(false);
   entry1->set_max_length(0);
   entry1->set_text("");
   entry1->set_has_frame(true);
   entry1->set_activates_default(false);
   hscale_master_volume->set_flags(Gtk::CAN_FOCUS);
   hscale_master_volume->set_update_policy(Gtk::UPDATE_DISCONTINUOUS);
   hscale_master_volume->set_inverted(false);
   hscale_master_volume->set_digits(1);
   hscale_master_volume->set_draw_value(true);
   hscale_master_volume->set_value_pos(Gtk::POS_RIGHT);
   table2->set_row_spacings(0);
   table2->set_col_spacings(0);
   table2->attach(*label8, 0, 1, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*label9, 0, 1, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*hscale_metronome_volume, 1, 2, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*hscale_master_pan, 2, 3, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*hscale_metronome_pan, 2, 3, 1, 2, Gtk::FILL, Gtk::FILL, 0, 0);
   table2->attach(*checkbutton_master_mute, 3, 4, 0, 1, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*checkbutton_metronome_mute, 3, 4, 1, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*entry1, 4, 5, 0, 2, Gtk::FILL, Gtk::AttachOptions(), 0, 0);
   table2->attach(*hscale_master_volume, 1, 2, 0, 1, Gtk::EXPAND|Gtk::FILL, Gtk::FILL, 0, 0);
   treeview1->set_flags(Gtk::CAN_FOCUS);
   treeview1->set_headers_visible(false);
   treeview1->set_rules_hint(false);
   treeview1->set_reorderable(false);
   treeview1->set_enable_search(true);
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow1->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*treeview1);
   alignment1->add(*scrolledwindow1);
   label1->set_alignment(0.5,0.5);
   label1->set_padding(0,0);
   label1->set_justify(Gtk::JUSTIFY_LEFT);
   label1->set_line_wrap(false);
   label1->set_use_markup(true);
   label1->set_selectable(false);
   frame1->set_shadow_type(Gtk::SHADOW_NONE);
   frame1->set_label_align(0,0.5);
   frame1->add(*alignment1);
   frame1->set_label_widget(*label1);
   treeview2->set_flags(Gtk::CAN_FOCUS);
   treeview2->set_headers_visible(false);
   treeview2->set_rules_hint(false);
   treeview2->set_reorderable(false);
   treeview2->set_enable_search(true);
   scrolledwindow2->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow2->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow2->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow2->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow2->add(*treeview2);
   alignment2->add(*scrolledwindow2);
   label2->set_alignment(0.5,0.5);
   label2->set_padding(0,0);
   label2->set_justify(Gtk::JUSTIFY_LEFT);
   label2->set_line_wrap(false);
   label2->set_use_markup(true);
   label2->set_selectable(false);
   frame2->set_shadow_type(Gtk::SHADOW_NONE);
   frame2->set_label_align(0,0.5);
   frame2->add(*alignment2);
   frame2->set_label_widget(*label2);
   vpaned2->set_flags(Gtk::CAN_FOCUS);
   vpaned2->pack1(*frame1, Gtk::SHRINK);
   vpaned2->pack2(*frame2, Gtk::EXPAND|Gtk::SHRINK);
   textview1->set_flags(Gtk::CAN_FOCUS);
   textview1->set_editable(false);
   textview1->set_cursor_visible(true);
   textview1->set_pixels_above_lines(0);
   textview1->set_pixels_below_lines(0);
   textview1->set_pixels_inside_wrap(0);
   textview1->set_left_margin(0);
   textview1->set_right_margin(0);
   textview1->set_indent(0);
   textview1->set_wrap_mode(Gtk::WRAP_NONE);
   textview1->set_justification(Gtk::JUSTIFY_LEFT);
   scrolledwindow3->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow3->set_shadow_type(Gtk::SHADOW_IN);
   scrolledwindow3->set_policy(Gtk::POLICY_AUTOMATIC, Gtk::POLICY_AUTOMATIC);
   scrolledwindow3->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow3->add(*textview1);
   chat_entry->set_flags(Gtk::CAN_FOCUS);
   chat_entry->set_visibility(true);
   chat_entry->set_editable(true);
   chat_entry->set_max_length(0);
   chat_entry->set_text("");
   chat_entry->set_has_frame(true);
   chat_entry->set_activates_default(true);
   button_send->set_flags(Gtk::CAN_FOCUS);
   button_send->set_flags(Gtk::CAN_DEFAULT);
   button_send->set_relief(Gtk::RELIEF_NORMAL);
   hbox2->pack_start(*chat_entry);
   hbox2->pack_start(*button_send, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*scrolledwindow3);
   vbox3->pack_start(*hbox2, Gtk::PACK_SHRINK, 0);
   alignment3->add(*vbox3);
   label_chat->set_alignment(0.5,0.5);
   label_chat->set_padding(0,0);
   label_chat->set_justify(Gtk::JUSTIFY_LEFT);
   label_chat->set_line_wrap(false);
   label_chat->set_use_markup(true);
   label_chat->set_selectable(false);
   frame3->set_shadow_type(Gtk::SHADOW_NONE);
   frame3->set_label_align(0,0.5);
   frame3->add(*alignment3);
   frame3->set_label_widget(*label_chat);
   hpaned1->set_flags(Gtk::CAN_FOCUS);
   hpaned1->pack1(*vpaned2, Gtk::SHRINK);
   hpaned1->pack2(*frame3, Gtk::EXPAND|Gtk::SHRINK);
   hbox1->pack_start(*progressbar1, Gtk::PACK_SHRINK, 0);
   hbox1->pack_start(*statusbar1);
   vbox1->pack_start(*menubar1, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*table2, Gtk::PACK_SHRINK, 0);
   vbox1->pack_start(*hpaned1);
   vbox1->pack_start(*hbox1, Gtk::PACK_SHRINK, 0);
   gNinjamClient->set_title("NINJAM");
   gNinjamClient->set_modal(false);
   gNinjamClient->property_window_position().set_value(Gtk::WIN_POS_NONE);
   gNinjamClient->set_resizable(true);
   gNinjamClient->property_destroy_with_parent().set_value(false);
   gNinjamClient->add(*vbox1);
   verbinden1->show();
   trennen1->show();
   separatormenuitem1->show();
   beenden1->show();
   menuitem1->show();
   ausschneiden1->show();
   kopieren1->show();
   einf__gen1->show();
   l__schen1->show();
   menuitem2->show();
   menuitem3->show();
   info1->show();
   menuitem4->show();
   menubar1->show();
   label8->show();
   label9->show();
   hscale_metronome_volume->show();
   hscale_master_pan->show();
   hscale_metronome_pan->show();
   checkbutton_master_mute->show();
   checkbutton_metronome_mute->show();
   entry1->show();
   hscale_master_volume->show();
   table2->show();
   treeview1->show();
   scrolledwindow1->show();
   alignment1->show();
   label1->show();
   frame1->show();
   treeview2->show();
   scrolledwindow2->show();
   alignment2->show();
   label2->show();
   frame2->show();
   vpaned2->show();
   textview1->show();
   scrolledwindow3->show();
   chat_entry->show();
   button_send->show();
   hbox2->show();
   vbox3->show();
   alignment3->show();
   label_chat->show();
   frame3->show();
   hpaned1->show();
   progressbar1->show();
   statusbar1->show();
   hbox1->show();
   vbox1->show();
   gNinjamClient->show();
   verbinden1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_verbinden1_activate), false);
   trennen1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_trennen1_activate), false);
   beenden1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_beenden1_activate), false);
   ausschneiden1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_ausschneiden1_activate), false);
   kopieren1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_kopieren1_activate), false);
   einf__gen1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_einf__gen1_activate), false);
   l__schen1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_l__schen1_activate), false);
   info1->signal_activate().connect(SigC::slot(*this, &gNinjamClient_glade::on_info1_activate), false);
   hscale_metronome_volume->signal_value_changed().connect(SigC::slot(*this, &gNinjamClient_glade::on_hscale_metronome_volume_value_changed), false);
   hscale_master_pan->signal_value_changed().connect(SigC::slot(*this, &gNinjamClient_glade::on_hscale_master_pan_value_changed), false);
   hscale_metronome_pan->signal_value_changed().connect(SigC::slot(*this, &gNinjamClient_glade::on_hscale_metronome_pan_value_changed), false);
   checkbutton_master_mute->signal_toggled().connect(SigC::slot(*this, &gNinjamClient_glade::on_checkbutton_master_mute_toggled), false);
   checkbutton_metronome_mute->signal_toggled().connect(SigC::slot(*this, &gNinjamClient_glade::on_checkbutton_metronome_mute_toggled), false);
   hscale_master_volume->signal_value_changed().connect(SigC::slot(*this, &gNinjamClient_glade::on_hscale_master_volume_value_changed), false);
   button_send->signal_clicked().connect(SigC::slot(*this, &gNinjamClient_glade::on_button_send_clicked), false);
   button_send->grab_default();
}

gNinjamClient_glade::~gNinjamClient_glade()
{  delete gmm_data;
}
